{"ast":null,"code":"var _jsxFileName = \"D:\\\\NodeJS_H\\u1ED3 H\\u1EA3i Ch\\xE2u\\\\room-rental-system\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Navbar } from 'react-bootstrap';\nimport RoomList from './components/RoomList';\nimport RoomForm from './components/RoomForm';\nimport DeleteConfirmation from './components/DeleteConfirmation';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [rooms, setRooms] = useState([]);\n  const [paymentTypes, setPaymentTypes] = useState([]);\n  const [showRoomForm, setShowRoomForm] = useState(false);\n  const [showDeleteConfirmation, setShowDeleteConfirmation] = useState(false);\n  const [selectedRooms, setSelectedRooms] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Fetch rooms and payment types on component mount\n  useEffect(() => {\n    const fetchInitialData = async () => {\n      try {\n        setIsLoading(true);\n        // Initialize payment types if they don't exist\n        await axios.post('http://localhost:5000/api/payment-types/init');\n\n        // Fetch payment types\n        const paymentTypesResponse = await axios.get('http://localhost:5000/api/payment-types');\n        console.log('Payment Types from API:', paymentTypesResponse.data);\n        setPaymentTypes(paymentTypesResponse.data);\n\n        // Fetch rooms\n        const roomsResponse = await axios.get('http://localhost:5000/api/rooms');\n        setRooms(roomsResponse.data);\n      } catch (error) {\n        console.error('Error fetching initial data:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchInitialData();\n  }, []);\n\n  // Handle search\n  const handleSearch = async e => {\n    const term = e.target.value;\n    setSearchTerm(term);\n    try {\n      const response = await axios.get(`http://localhost:5000/api/rooms?search=${term}`);\n      setRooms(response.data);\n    } catch (error) {\n      console.error('Error searching rooms:', error);\n    }\n  };\n\n  // Handle create new room\n  const handleCreateRoom = async roomData => {\n    try {\n      console.log(\"Sending data to server:\", roomData);\n      const response = await axios.post('http://localhost:5000/api/rooms', roomData);\n      setRooms([...rooms, response.data]);\n      setShowRoomForm(false);\n    } catch (error) {\n      console.error('Error creating room:', error);\n      if (error.response && error.response.data) {\n        console.error('Error details from server:', error.response.data);\n        alert(`Lỗi: ${error.response.data.message || 'Không thể tạo phòng'}`);\n      } else {\n        alert('Lỗi kết nối hoặc máy chủ không khả dụng');\n      }\n    }\n  };\n\n  // Handle delete rooms\n  const handleDeleteRooms = async () => {\n    try {\n      await axios.delete('http://localhost:5000/api/rooms', {\n        data: {\n          ids: selectedRooms\n        }\n      });\n      setRooms(rooms.filter(room => !selectedRooms.includes(room._id)));\n      setSelectedRooms([]);\n      setShowDeleteConfirmation(false);\n    } catch (error) {\n      console.error('Error deleting rooms:', error);\n      alert('Lỗi khi xóa phòng');\n    }\n  };\n\n  // Toggle room selection\n  const toggleRoomSelection = roomId => {\n    if (selectedRooms.includes(roomId)) {\n      setSelectedRooms(selectedRooms.filter(id => id !== roomId));\n    } else {\n      setSelectedRooms([...selectedRooms, roomId]);\n    }\n  };\n\n  // Handle select all rooms\n  const toggleSelectAll = () => {\n    if (selectedRooms.length === rooms.length) {\n      setSelectedRooms([]);\n    } else {\n      setSelectedRooms(rooms.map(room => room._id));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      bg: \"dark\",\n      variant: \"dark\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Navbar.Brand, {\n          children: \"H\\u1EC7 Th\\u1ED1ng Qu\\u1EA3n L\\xFD Thu\\xEA Ph\\xF2ng Tr\\u1ECD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(RoomList, {\n        rooms: rooms,\n        isLoading: isLoading,\n        searchTerm: searchTerm,\n        handleSearch: handleSearch,\n        selectedRooms: selectedRooms,\n        toggleRoomSelection: toggleRoomSelection,\n        toggleSelectAll: toggleSelectAll,\n        onCreateClick: () => setShowRoomForm(true),\n        onDeleteClick: () => setShowDeleteConfirmation(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RoomForm, {\n        show: showRoomForm,\n        onHide: () => setShowRoomForm(false),\n        onSave: handleCreateRoom,\n        paymentTypes: paymentTypes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DeleteConfirmation, {\n        show: showDeleteConfirmation,\n        onHide: () => setShowDeleteConfirmation(false),\n        onConfirm: handleDeleteRooms,\n        selectedRooms: selectedRooms,\n        rooms: rooms\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"91plbGCNblK+nnmZC0feZnSE7mY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Container","Navbar","RoomList","RoomForm","DeleteConfirmation","axios","jsxDEV","_jsxDEV","App","_s","rooms","setRooms","paymentTypes","setPaymentTypes","showRoomForm","setShowRoomForm","showDeleteConfirmation","setShowDeleteConfirmation","selectedRooms","setSelectedRooms","searchTerm","setSearchTerm","isLoading","setIsLoading","fetchInitialData","post","paymentTypesResponse","get","console","log","data","roomsResponse","error","handleSearch","e","term","target","value","response","handleCreateRoom","roomData","alert","message","handleDeleteRooms","delete","ids","filter","room","includes","_id","toggleRoomSelection","roomId","id","toggleSelectAll","length","map","children","bg","variant","Brand","fileName","_jsxFileName","lineNumber","columnNumber","className","onCreateClick","onDeleteClick","show","onHide","onSave","onConfirm","_c","$RefreshReg$"],"sources":["D:/NodeJS_Hồ Hải Châu/room-rental-system/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Container, Navbar } from 'react-bootstrap';\r\nimport RoomList from './components/RoomList';\r\nimport RoomForm from './components/RoomForm';\r\nimport DeleteConfirmation from './components/DeleteConfirmation';\r\nimport axios from 'axios';\r\n\r\nfunction App() {\r\n  const [rooms, setRooms] = useState([]);\r\n  const [paymentTypes, setPaymentTypes] = useState([]);\r\n  const [showRoomForm, setShowRoomForm] = useState(false);\r\n  const [showDeleteConfirmation, setShowDeleteConfirmation] = useState(false);\r\n  const [selectedRooms, setSelectedRooms] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // Fetch rooms and payment types on component mount\r\n  useEffect(() => {\r\n    const fetchInitialData = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        // Initialize payment types if they don't exist\r\n        await axios.post('http://localhost:5000/api/payment-types/init');\r\n        \r\n        // Fetch payment types\r\n        const paymentTypesResponse = await axios.get('http://localhost:5000/api/payment-types');\r\n        console.log('Payment Types from API:', paymentTypesResponse.data);\r\n        setPaymentTypes(paymentTypesResponse.data);\r\n        \r\n        // Fetch rooms\r\n        const roomsResponse = await axios.get('http://localhost:5000/api/rooms');\r\n        setRooms(roomsResponse.data);\r\n      } catch (error) {\r\n        console.error('Error fetching initial data:', error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchInitialData();\r\n  }, []);\r\n\r\n  // Handle search\r\n  const handleSearch = async (e) => {\r\n    const term = e.target.value;\r\n    setSearchTerm(term);\r\n    \r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/api/rooms?search=${term}`);\r\n      setRooms(response.data);\r\n    } catch (error) {\r\n      console.error('Error searching rooms:', error);\r\n    }\r\n  };\r\n\r\n  // Handle create new room\r\n  const handleCreateRoom = async (roomData) => {\r\n    try {\r\n      console.log(\"Sending data to server:\", roomData);\r\n      const response = await axios.post('http://localhost:5000/api/rooms', roomData);\r\n      setRooms([...rooms, response.data]);\r\n      setShowRoomForm(false);\r\n    } catch (error) {\r\n      console.error('Error creating room:', error);\r\n      if (error.response && error.response.data) {\r\n        console.error('Error details from server:', error.response.data);\r\n        alert(`Lỗi: ${error.response.data.message || 'Không thể tạo phòng'}`);\r\n      } else {\r\n        alert('Lỗi kết nối hoặc máy chủ không khả dụng');\r\n      }\r\n    }\r\n  };\r\n\r\n  // Handle delete rooms\r\n  const handleDeleteRooms = async () => {\r\n    try {\r\n      await axios.delete('http://localhost:5000/api/rooms', { data: { ids: selectedRooms } });\r\n      setRooms(rooms.filter(room => !selectedRooms.includes(room._id)));\r\n      setSelectedRooms([]);\r\n      setShowDeleteConfirmation(false);\r\n    } catch (error) {\r\n      console.error('Error deleting rooms:', error);\r\n      alert('Lỗi khi xóa phòng');\r\n    }\r\n  };\r\n\r\n  // Toggle room selection\r\n  const toggleRoomSelection = (roomId) => {\r\n    if (selectedRooms.includes(roomId)) {\r\n      setSelectedRooms(selectedRooms.filter(id => id !== roomId));\r\n    } else {\r\n      setSelectedRooms([...selectedRooms, roomId]);\r\n    }\r\n  };\r\n\r\n  // Handle select all rooms\r\n  const toggleSelectAll = () => {\r\n    if (selectedRooms.length === rooms.length) {\r\n      setSelectedRooms([]);\r\n    } else {\r\n      setSelectedRooms(rooms.map(room => room._id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar bg=\"dark\" variant=\"dark\">\r\n        <Container>\r\n          <Navbar.Brand>Hệ Thống Quản Lý Thuê Phòng Trọ</Navbar.Brand>\r\n        </Container>\r\n      </Navbar>\r\n      \r\n      <Container className=\"app-container\">\r\n        <RoomList \r\n          rooms={rooms}\r\n          isLoading={isLoading}\r\n          searchTerm={searchTerm}\r\n          handleSearch={handleSearch}\r\n          selectedRooms={selectedRooms}\r\n          toggleRoomSelection={toggleRoomSelection}\r\n          toggleSelectAll={toggleSelectAll}\r\n          onCreateClick={() => setShowRoomForm(true)}\r\n          onDeleteClick={() => setShowDeleteConfirmation(true)}\r\n        />\r\n        \r\n        <RoomForm \r\n          show={showRoomForm}\r\n          onHide={() => setShowRoomForm(false)}\r\n          onSave={handleCreateRoom}\r\n          paymentTypes={paymentTypes}\r\n        />\r\n        \r\n        <DeleteConfirmation \r\n          show={showDeleteConfirmation}\r\n          onHide={() => setShowDeleteConfirmation(false)}\r\n          onConfirm={handleDeleteRooms}\r\n          selectedRooms={selectedRooms}\r\n          rooms={rooms}\r\n        />\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}